(()=>{"use strict";const e=e=>`../src${e.slice(34)}`,t=document.querySelector(".icon-element");(async e=>{const t=await fetch("https://api.weatherapi.com/v1/current.json?key=503d861821ea4a11b6e163936230307&q=london",{mode:"cors"});return await t.json()})().then((o=>{console.log(o);const c=(t=>{const o={};return o.name=t.location.name,o.country=t.location.country,o.localTime=(e=>{const t=e.split(" ");return{date:new Date(t[0]).toDateString(),time:t[1]}})(t.location.localtime),o.temp_c=t.current.temp_c,o.temp_f=t.current.temp_f,o.feelsLike_c=t.current.feelslike_c,o.feelsLike_f=t.current.feelslike_f,o.humidity=t.current.humidity,o.windSpeed=t.current.wind_kph,o.condition=t.current.condition,o.icon=e(t.current.condition.icon),o})(o);console.log(c),t.src=c.icon,(e=>{const t=document.querySelector(".location"),o=document.querySelector(".local-date-time"),c=document.querySelector(".current>.condition>.icon"),n=document.querySelector(".current>.condition>.text"),a=document.querySelector(".current>.condition>.temperature"),r=document.querySelector(".feels-like-temp>.data"),d=document.querySelector(".humidity>.data"),i=document.querySelector(".wind-speed>.data");t.textContent=`${e.name}, ${e.country}`,o.textContent=`${e.localTime.date}, ${e.localTime.time}`,c.src=e.icon,n.textContent=e.condition.text,a.textContent=`${e.temp_c} °C`,r.textContent=`${e.feelsLike_c} °C`,d.textContent=`${e.humidity} %`,i.textContent=`${e.windSpeed} kmph`})(c)})),(async e=>{const t=await fetch("http://api.weatherapi.com/v1/forecast.json?key=503d861821ea4a11b6e163936230307&q=london&days=3",{mode:"cors"});return await t.json()})().then((t=>{console.log(t);const o=(t=>{const o={day1:{},day2:{},day3:{}};return o.day1.avgTemp_c=t.forecast.forecastday[0].day.avgtemp_c,o.day1.avgTemp_f=t.forecast.forecastday[0].day.avgtemp_f,o.day1.date=new Date(t.forecast.forecastday[0].date).toDateString(),o.day1.condition=t.forecast.forecastday[0].day.condition,o.day1.icon=e(t.forecast.forecastday[0].day.condition.icon),o.day2.avgTemp_c=t.forecast.forecastday[1].day.avgtemp_c,o.day2.avgTemp_f=t.forecast.forecastday[1].day.avgtemp_f,o.day2.date=new Date(t.forecast.forecastday[1].date).toDateString(),o.day2.condition=t.forecast.forecastday[1].day.condition,o.day2.icon=e(t.forecast.forecastday[1].day.condition.icon),o.day3.avgTemp_c=t.forecast.forecastday[2].day.avgtemp_c,o.day3.avgTemp_f=t.forecast.forecastday[2].day.avgtemp_f,o.day3.date=new Date(t.forecast.forecastday[2].date).toDateString(),o.day3.condition=t.forecast.forecastday[2].day.condition,o.day3.icon=e(t.forecast.forecastday[2].day.condition.icon),o})(t);console.log(o),(e=>{const t=document.querySelector(".plus-one>.icon"),o=document.querySelector(".plus-one>.text"),c=document.querySelector(".plus-one>.temperature"),n=document.querySelector(".plus-two>.icon"),a=document.querySelector(".plus-two>.text"),r=document.querySelector(".plus-two>.temperature"),d=document.querySelector(".plus-three>.icon"),i=document.querySelector(".plus-three>.text"),y=document.querySelector(".plus-three>.temperature");t.src=e.day1.icon,o.textContent=e.day1.condition.text,c.textContent=`${e.day1.avgTemp_c}°C`,n.src=e.day2.icon,a.textContent=e.day2.condition.text,r.textContent=`${e.day2.avgTemp_c}°C`,d.src=e.day3.icon,i.textContent=e.day3.condition.text,y.textContent=`${e.day3.avgTemp_c}°C`})(o)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWMsMEJBQ3JDNEQsRUFBYzdELFNBQVNDLGNBQWMsbUJBQ3JDNkQsRUFBYzlELFNBQVNDLGNBQWMsbUJBQ3JDOEQsRUFBYy9ELFNBQVNDLGNBQWMsMEJBQ3JDK0QsRUFBZ0JoRSxTQUFTQyxjQUFjLHFCQUN2Q2dFLEVBQWdCakUsU0FBU0MsY0FBYyxxQkFDdkNpRSxFQUFnQmxFLFNBQVNDLGNBQWMsNEJBRTdDeUQsRUFBWXBCLElBQU01QixFQUFLcUMsS0FBS2pELEtBQzVCNkQsRUFBWWhCLFlBQWNqQyxFQUFLcUMsS0FBS1gsVUFBVUksS0FDOUNvQixFQUFZakIsWUFBYyxHQUFHakMsRUFBS3FDLEtBQUtDLGNBRXZDYSxFQUFZdkIsSUFBTTVCLEVBQUs2QyxLQUFLekQsS0FDNUJnRSxFQUFZbkIsWUFBY2pDLEVBQUs2QyxLQUFLbkIsVUFBVUksS0FDOUN1QixFQUFZcEIsWUFBYyxHQUFHakMsRUFBSzZDLEtBQUtQLGNBRXZDZ0IsRUFBYzFCLElBQU01QixFQUFLOEMsS0FBSzFELEtBQzlCbUUsRUFBY3RCLFlBQWNqQyxFQUFLOEMsS0FBS3BCLFVBQVVJLEtBQ2hEMEIsRUFBY3ZCLFlBQWMsR0FBR2pDLEVBQUs4QyxLQUFLUixhQUFhLEVEcEJsRG1CLENBQTJCckIsRUFBcUIsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL3dlYXRoZXItYXBpLWNhbGxzLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL3Byb2Nlc3MtZGF0YS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9kaXNwbGF5LWRhdGEuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZ2V0Q3VycmVudFdlYXRoZXIgPSBhc3luYyAobG9jYXRpb24pID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS53ZWF0aGVyYXBpLmNvbS92MS9jdXJyZW50Lmpzb24/a2V5PTUwM2Q4NjE4MjFlYTRhMTFiNmUxNjM5MzYyMzAzMDcmcT0ke2xvY2F0aW9ufWAsIHsgbW9kZTogXCJjb3JzXCIgfSk7XG4gICAgY29uc3QgY3VycmVudFdlYXRoZXJEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG4gICAgcmV0dXJuIGN1cnJlbnRXZWF0aGVyRGF0YTtcbn1cblxuY29uc3QgZ2V0Rm9yZWNhc3RXZWF0aGVyID0gYXN5bmMgKGxvY2F0aW9uKSA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cDovL2FwaS53ZWF0aGVyYXBpLmNvbS92MS9mb3JlY2FzdC5qc29uP2tleT01MDNkODYxODIxZWE0YTExYjZlMTYzOTM2MjMwMzA3JnE9JHtsb2NhdGlvbn0mZGF5cz0zYCwgeyBtb2RlOiBcImNvcnNcIiB9KTtcbiAgICBjb25zdCBmb3JlY2FzdFdlYXRoZXJEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG4gICAgcmV0dXJuIGZvcmVjYXN0V2VhdGhlckRhdGE7XG59XG5cblxuZXhwb3J0IHtcbiAgICBnZXRDdXJyZW50V2VhdGhlcixcbiAgICBnZXRGb3JlY2FzdFdlYXRoZXIsXG59IiwiY29uc3QgcHJvY2Vzc0xvY2FsVGltZSA9IChsb2NhbHRpbWUpID0+IHtcbiAgICBjb25zdCBzcGxpdEFycmF5ID0gbG9jYWx0aW1lLnNwbGl0KFwiIFwiKTtcbiAgICBjb25zdCBuRGF0ZSA9IG5ldyBEYXRlKHNwbGl0QXJyYXlbMF0pLnRvRGF0ZVN0cmluZygpO1xuICAgIGNvbnN0IG5UaW1lID0gc3BsaXRBcnJheVsxXTtcblxuICAgIGNvbnN0IHByb2Nlc3NlZExvY2FsVGltZSA9IHsgZGF0ZTogbkRhdGUsIHRpbWU6IG5UaW1lIH07XG5cbiAgICByZXR1cm4gcHJvY2Vzc2VkTG9jYWxUaW1lO1xufVxuXG5jb25zdCBwcm9jZXNzSWNvbiA9IChpY29uKSA9PiB7XG4gICAgY29uc3QgcHJvY2Vzc2VkSWNvbiA9IGAuLi9zcmMke2ljb24uc2xpY2UoMzQpfWA7XG4gICAgcmV0dXJuIHByb2Nlc3NlZEljb247XG59XG5cbmNvbnN0IHByb2Nlc3NDdXJyZW50V2VhdGhlckRhdGEgPSAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IHJlcXVpcmVkRGF0YSA9IHt9O1xuXG4gICAgcmVxdWlyZWREYXRhLm5hbWUgPSBkYXRhLmxvY2F0aW9uLm5hbWU7XG4gICAgcmVxdWlyZWREYXRhLmNvdW50cnkgPSBkYXRhLmxvY2F0aW9uLmNvdW50cnk7XG4gICAgcmVxdWlyZWREYXRhLmxvY2FsVGltZSA9IHByb2Nlc3NMb2NhbFRpbWUoZGF0YS5sb2NhdGlvbi5sb2NhbHRpbWUpO1xuXG4gICAgcmVxdWlyZWREYXRhLnRlbXBfYyA9IGRhdGEuY3VycmVudC50ZW1wX2M7XG4gICAgcmVxdWlyZWREYXRhLnRlbXBfZiA9IGRhdGEuY3VycmVudC50ZW1wX2Y7XG4gICAgcmVxdWlyZWREYXRhLmZlZWxzTGlrZV9jID0gZGF0YS5jdXJyZW50LmZlZWxzbGlrZV9jO1xuICAgIHJlcXVpcmVkRGF0YS5mZWVsc0xpa2VfZiA9IGRhdGEuY3VycmVudC5mZWVsc2xpa2VfZjtcbiAgICByZXF1aXJlZERhdGEuaHVtaWRpdHkgPSBkYXRhLmN1cnJlbnQuaHVtaWRpdHk7XG4gICAgcmVxdWlyZWREYXRhLndpbmRTcGVlZCA9IGRhdGEuY3VycmVudC53aW5kX2twaDtcbiAgICByZXF1aXJlZERhdGEuY29uZGl0aW9uID0gZGF0YS5jdXJyZW50LmNvbmRpdGlvbjtcbiAgICByZXF1aXJlZERhdGEuaWNvbiA9IHByb2Nlc3NJY29uKGRhdGEuY3VycmVudC5jb25kaXRpb24uaWNvbik7XG5cbiAgICByZXR1cm4gcmVxdWlyZWREYXRhO1xufVxuXG5jb25zdCBwcm9jZXNzRm9yZWNhc3RXZWF0aGVyRGF0YSA9IChkYXRhKSA9PiB7XG4gICAgY29uc3QgcmVxdWlyZWREYXRhID0ge307XG5cbiAgICByZXF1aXJlZERhdGEuZGF5MSA9IHt9O1xuICAgIHJlcXVpcmVkRGF0YS5kYXkyID0ge307XG4gICAgcmVxdWlyZWREYXRhLmRheTMgPSB7fTtcblxuICAgIHJlcXVpcmVkRGF0YS5kYXkxLmF2Z1RlbXBfYyA9IGRhdGEuZm9yZWNhc3QuZm9yZWNhc3RkYXlbMF0uZGF5LmF2Z3RlbXBfYztcbiAgICByZXF1aXJlZERhdGEuZGF5MS5hdmdUZW1wX2YgPSBkYXRhLmZvcmVjYXN0LmZvcmVjYXN0ZGF5WzBdLmRheS5hdmd0ZW1wX2Y7XG4gICAgcmVxdWlyZWREYXRhLmRheTEuZGF0ZSA9IG5ldyBEYXRlKGRhdGEuZm9yZWNhc3QuZm9yZWNhc3RkYXlbMF0uZGF0ZSkudG9EYXRlU3RyaW5nKCk7XG4gICAgcmVxdWlyZWREYXRhLmRheTEuY29uZGl0aW9uID0gZGF0YS5mb3JlY2FzdC5mb3JlY2FzdGRheVswXS5kYXkuY29uZGl0aW9uO1xuICAgIHJlcXVpcmVkRGF0YS5kYXkxLmljb24gPSBwcm9jZXNzSWNvbihkYXRhLmZvcmVjYXN0LmZvcmVjYXN0ZGF5WzBdLmRheS5jb25kaXRpb24uaWNvbik7XG5cbiAgICByZXF1aXJlZERhdGEuZGF5Mi5hdmdUZW1wX2MgPSBkYXRhLmZvcmVjYXN0LmZvcmVjYXN0ZGF5WzFdLmRheS5hdmd0ZW1wX2M7XG4gICAgcmVxdWlyZWREYXRhLmRheTIuYXZnVGVtcF9mID0gZGF0YS5mb3JlY2FzdC5mb3JlY2FzdGRheVsxXS5kYXkuYXZndGVtcF9mO1xuICAgIHJlcXVpcmVkRGF0YS5kYXkyLmRhdGUgPSBuZXcgRGF0ZShkYXRhLmZvcmVjYXN0LmZvcmVjYXN0ZGF5WzFdLmRhdGUpLnRvRGF0ZVN0cmluZygpO1xuICAgIHJlcXVpcmVkRGF0YS5kYXkyLmNvbmRpdGlvbiA9IGRhdGEuZm9yZWNhc3QuZm9yZWNhc3RkYXlbMV0uZGF5LmNvbmRpdGlvbjtcbiAgICByZXF1aXJlZERhdGEuZGF5Mi5pY29uID0gcHJvY2Vzc0ljb24oZGF0YS5mb3JlY2FzdC5mb3JlY2FzdGRheVsxXS5kYXkuY29uZGl0aW9uLmljb24pO1xuXG4gICAgcmVxdWlyZWREYXRhLmRheTMuYXZnVGVtcF9jID0gZGF0YS5mb3JlY2FzdC5mb3JlY2FzdGRheVsyXS5kYXkuYXZndGVtcF9jO1xuICAgIHJlcXVpcmVkRGF0YS5kYXkzLmF2Z1RlbXBfZiA9IGRhdGEuZm9yZWNhc3QuZm9yZWNhc3RkYXlbMl0uZGF5LmF2Z3RlbXBfZjtcbiAgICByZXF1aXJlZERhdGEuZGF5My5kYXRlID0gbmV3IERhdGUoZGF0YS5mb3JlY2FzdC5mb3JlY2FzdGRheVsyXS5kYXRlKS50b0RhdGVTdHJpbmcoKTtcbiAgICByZXF1aXJlZERhdGEuZGF5My5jb25kaXRpb24gPSBkYXRhLmZvcmVjYXN0LmZvcmVjYXN0ZGF5WzJdLmRheS5jb25kaXRpb247XG4gICAgcmVxdWlyZWREYXRhLmRheTMuaWNvbiA9IHByb2Nlc3NJY29uKGRhdGEuZm9yZWNhc3QuZm9yZWNhc3RkYXlbMl0uZGF5LmNvbmRpdGlvbi5pY29uKTtcblxuICAgIHJldHVybiByZXF1aXJlZERhdGE7XG59XG5cbmV4cG9ydCB7XG4gICAgcHJvY2Vzc0N1cnJlbnRXZWF0aGVyRGF0YSxcbiAgICBwcm9jZXNzRm9yZWNhc3RXZWF0aGVyRGF0YSxcbn0iLCJpbXBvcnQgeyBnZXRDdXJyZW50V2VhdGhlciwgZ2V0Rm9yZWNhc3RXZWF0aGVyIH0gZnJvbSBcIi4vd2VhdGhlci1hcGktY2FsbHNcIjtcbmltcG9ydCB7IHByb2Nlc3NDdXJyZW50V2VhdGhlckRhdGEsIHByb2Nlc3NGb3JlY2FzdFdlYXRoZXJEYXRhIH0gZnJvbSBcIi4vcHJvY2Vzcy1kYXRhXCI7XG5pbXBvcnQgeyBkaXNwbGF5Q3VycmVudFdlYXRoZXJEYXRhLCBkaXNwbGF5Rm9yZWNhc3RXZWF0aGVyRGF0YSB9IGZyb20gXCIuL2Rpc3BsYXktZGF0YVwiO1xuXG5jb25zdCBpY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5pY29uLWVsZW1lbnRcIik7XG5cblxuZ2V0Q3VycmVudFdlYXRoZXIoXCJsb25kb25cIilcbiAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgICAgY29uc3QgcmVxdWlyZWRDdXJyZW50RGF0YSA9IHByb2Nlc3NDdXJyZW50V2VhdGhlckRhdGEoZGF0YSk7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlcXVpcmVkQ3VycmVudERhdGEpO1xuICAgICAgICBpY29uLnNyYyA9IHJlcXVpcmVkQ3VycmVudERhdGEuaWNvbjtcbiAgICAgICAgZGlzcGxheUN1cnJlbnRXZWF0aGVyRGF0YShyZXF1aXJlZEN1cnJlbnREYXRhKTtcbiAgICB9KTtcblxuZ2V0Rm9yZWNhc3RXZWF0aGVyKFwibG9uZG9uXCIpXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICAgIGNvbnN0IHJlcXVpcmVkRm9yZWNhc3REYXRhID0gcHJvY2Vzc0ZvcmVjYXN0V2VhdGhlckRhdGEoZGF0YSk7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlcXVpcmVkRm9yZWNhc3REYXRhKTtcbiAgICAgICAgZGlzcGxheUZvcmVjYXN0V2VhdGhlckRhdGEocmVxdWlyZWRGb3JlY2FzdERhdGEpO1xuICAgIH0pXG5cbiIsImNvbnN0IGRpc3BsYXlDdXJyZW50V2VhdGhlckRhdGEgPSAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IGxvY2F0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5sb2NhdGlvblwiKTtcbiAgICBjb25zdCBsb2NhbERhdGVUaW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5sb2NhbC1kYXRlLXRpbWVcIik7XG4gICAgY29uc3QgaWNvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY3VycmVudD4uY29uZGl0aW9uPi5pY29uXCIpO1xuICAgIGNvbnN0IHRleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmN1cnJlbnQ+LmNvbmRpdGlvbj4udGV4dFwiKTtcbiAgICBjb25zdCB0ZW1wZXJhdHVyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY3VycmVudD4uY29uZGl0aW9uPi50ZW1wZXJhdHVyZVwiKTtcbiAgICBjb25zdCBmZWVsc0xpa2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZlZWxzLWxpa2UtdGVtcD4uZGF0YVwiKTtcbiAgICBjb25zdCBodW1pZGl0eSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaHVtaWRpdHk+LmRhdGFcIik7XG4gICAgY29uc3Qgd2luZFNwZWVkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi53aW5kLXNwZWVkPi5kYXRhXCIpO1xuXG4gICAgbG9jYXRpb24udGV4dENvbnRlbnQgPSBgJHtkYXRhLm5hbWV9LCAke2RhdGEuY291bnRyeX1gO1xuICAgIGxvY2FsRGF0ZVRpbWUudGV4dENvbnRlbnQgPSBgJHtkYXRhLmxvY2FsVGltZS5kYXRlfSwgJHtkYXRhLmxvY2FsVGltZS50aW1lfWA7XG4gICAgaWNvbi5zcmMgPSBkYXRhLmljb247XG4gICAgdGV4dC50ZXh0Q29udGVudCA9IGRhdGEuY29uZGl0aW9uLnRleHQ7XG4gICAgdGVtcGVyYXR1cmUudGV4dENvbnRlbnQgPSBgJHtkYXRhLnRlbXBfY30gwrBDYDtcbiAgICBmZWVsc0xpa2UudGV4dENvbnRlbnQgPSBgJHtkYXRhLmZlZWxzTGlrZV9jfSDCsENgO1xuICAgIGh1bWlkaXR5LnRleHRDb250ZW50ID0gYCR7ZGF0YS5odW1pZGl0eX0gJWA7XG4gICAgd2luZFNwZWVkLnRleHRDb250ZW50ID0gYCR7ZGF0YS53aW5kU3BlZWR9IGttcGhgO1xufVxuXG5jb25zdCBkaXNwbGF5Rm9yZWNhc3RXZWF0aGVyRGF0YSA9IChkYXRhKSA9PiB7XG4gICAgY29uc3QgcGx1c09uZUljb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsdXMtb25lPi5pY29uXCIpO1xuICAgIGNvbnN0IHBsdXNPbmVUZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbHVzLW9uZT4udGV4dFwiKTtcbiAgICBjb25zdCBwbHVzT25lVGVtcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGx1cy1vbmU+LnRlbXBlcmF0dXJlXCIpO1xuICAgIGNvbnN0IHBsdXNUd29JY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbHVzLXR3bz4uaWNvblwiKTtcbiAgICBjb25zdCBwbHVzVHdvVGV4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGx1cy10d28+LnRleHRcIik7XG4gICAgY29uc3QgcGx1c1R3b1RlbXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsdXMtdHdvPi50ZW1wZXJhdHVyZVwiKTtcbiAgICBjb25zdCBwbHVzVGhyZWVJY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbHVzLXRocmVlPi5pY29uXCIpO1xuICAgIGNvbnN0IHBsdXNUaHJlZVRleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsdXMtdGhyZWU+LnRleHRcIik7XG4gICAgY29uc3QgcGx1c1RocmVlVGVtcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGx1cy10aHJlZT4udGVtcGVyYXR1cmVcIik7XG5cbiAgICBwbHVzT25lSWNvbi5zcmMgPSBkYXRhLmRheTEuaWNvbjtcbiAgICBwbHVzT25lVGV4dC50ZXh0Q29udGVudCA9IGRhdGEuZGF5MS5jb25kaXRpb24udGV4dDtcbiAgICBwbHVzT25lVGVtcC50ZXh0Q29udGVudCA9IGAke2RhdGEuZGF5MS5hdmdUZW1wX2N9wrBDYDtcblxuICAgIHBsdXNUd29JY29uLnNyYyA9IGRhdGEuZGF5Mi5pY29uO1xuICAgIHBsdXNUd29UZXh0LnRleHRDb250ZW50ID0gZGF0YS5kYXkyLmNvbmRpdGlvbi50ZXh0O1xuICAgIHBsdXNUd29UZW1wLnRleHRDb250ZW50ID0gYCR7ZGF0YS5kYXkyLmF2Z1RlbXBfY33CsENgO1xuXG4gICAgcGx1c1RocmVlSWNvbi5zcmMgPSBkYXRhLmRheTMuaWNvbjtcbiAgICBwbHVzVGhyZWVUZXh0LnRleHRDb250ZW50ID0gZGF0YS5kYXkzLmNvbmRpdGlvbi50ZXh0O1xuICAgIHBsdXNUaHJlZVRlbXAudGV4dENvbnRlbnQgPSBgJHtkYXRhLmRheTMuYXZnVGVtcF9jfcKwQ2A7XG5cbn1cblxuZXhwb3J0IHtcbiAgICBkaXNwbGF5Q3VycmVudFdlYXRoZXJEYXRhLFxuICAgIGRpc3BsYXlGb3JlY2FzdFdlYXRoZXJEYXRhXG59Il0sIm5hbWVzIjpbInByb2Nlc3NJY29uIiwiaWNvbiIsInNsaWNlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYXN5bmMiLCJsb2NhdGlvbiIsInJlc3BvbnNlIiwiZmV0Y2giLCJtb2RlIiwianNvbiIsImdldEN1cnJlbnRXZWF0aGVyIiwidGhlbiIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwicmVxdWlyZWRDdXJyZW50RGF0YSIsInJlcXVpcmVkRGF0YSIsIm5hbWUiLCJjb3VudHJ5IiwibG9jYWxUaW1lIiwibG9jYWx0aW1lIiwic3BsaXRBcnJheSIsInNwbGl0IiwiZGF0ZSIsIkRhdGUiLCJ0b0RhdGVTdHJpbmciLCJ0aW1lIiwicHJvY2Vzc0xvY2FsVGltZSIsInRlbXBfYyIsImN1cnJlbnQiLCJ0ZW1wX2YiLCJmZWVsc0xpa2VfYyIsImZlZWxzbGlrZV9jIiwiZmVlbHNMaWtlX2YiLCJmZWVsc2xpa2VfZiIsImh1bWlkaXR5Iiwid2luZFNwZWVkIiwid2luZF9rcGgiLCJjb25kaXRpb24iLCJwcm9jZXNzQ3VycmVudFdlYXRoZXJEYXRhIiwic3JjIiwibG9jYWxEYXRlVGltZSIsInRleHQiLCJ0ZW1wZXJhdHVyZSIsImZlZWxzTGlrZSIsInRleHRDb250ZW50IiwiZGlzcGxheUN1cnJlbnRXZWF0aGVyRGF0YSIsImdldEZvcmVjYXN0V2VhdGhlciIsInJlcXVpcmVkRm9yZWNhc3REYXRhIiwiZGF5MSIsImF2Z1RlbXBfYyIsImZvcmVjYXN0IiwiZm9yZWNhc3RkYXkiLCJkYXkiLCJhdmd0ZW1wX2MiLCJhdmdUZW1wX2YiLCJhdmd0ZW1wX2YiLCJkYXkyIiwiZGF5MyIsInByb2Nlc3NGb3JlY2FzdFdlYXRoZXJEYXRhIiwicGx1c09uZUljb24iLCJwbHVzT25lVGV4dCIsInBsdXNPbmVUZW1wIiwicGx1c1R3b0ljb24iLCJwbHVzVHdvVGV4dCIsInBsdXNUd29UZW1wIiwicGx1c1RocmVlSWNvbiIsInBsdXNUaHJlZVRleHQiLCJwbHVzVGhyZWVUZW1wIiwiZGlzcGxheUZvcmVjYXN0V2VhdGhlckRhdGEiXSwic291cmNlUm9vdCI6IiJ9